{"version":3,"sources":["static/svgs/like.svg","shared/utils.js","modules/game/redux/Game.actions.js","modules/gameOver/types/GameOver.types.js","modules/gameOver/screens/GameOver.js","modules/gameOver/containers/GameOver.container.js"],"names":["module","exports","formatMoney","num","toLocaleString","saveScore","score","type","SAVE_SCORE","payload","nextQuestionHandler","number","dispatch","SAVE_QUESTION_NUMBER","saveQuestionNumber","GET_NEXT_QUESTION_DATA","questions","getNextQuestionData","restartGame","RESTART_GAME","disableButtons","bool","DISABLE_BUTTONS","PropTypes","isRequired","GameOver","className","src","likeSvgPath","alt","total","renderErnedMoney","to","route","Game","onClick","connect","state","game"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,kC,gCCA3C,kCAAO,IAAMC,EAAc,SAACC,GAEzB,OADuBA,EAAIC,eAAe,W,gCCD7C,4JAgBO,SAASC,EAAUC,GACvB,MAAO,CACJC,KAAMC,IACNC,SAAUH,GAWT,SAASI,EAAoBC,EAAQL,GACzC,OAAO,SAACM,GAGLA,EAzBC,SAA4BD,GAChC,MAAO,CACJJ,KAAMM,IACNJ,QAASE,GAsBAG,CAFkBH,EAAS,IAGpCC,EAASP,EAAUC,IACnBM,EAbC,SAA6BD,GACjC,MAAO,CACJJ,KAAMQ,IACNN,QAASO,EAAUL,IAUVM,CAAoBN,KAI5B,SAASO,IACb,MAAO,CACJX,KAAMY,KAIL,SAASC,EAAeC,GAC5B,MAAO,CACJd,KAAMe,IACNb,QAASY,K,oHC9CLE,EAAUZ,OAAOa,W,gBCqCZC,EA5BE,SAAC,GAA4B,IAA1BnB,EAAyB,EAAzBA,MAAOY,EAAkB,EAAlBA,YAUxB,OACG,yBAAKQ,UAAU,YACZ,yBAAKA,UAAU,gBAAgBC,IAAKC,IAAaC,IAAI,KACrD,yBAAKH,UAAU,mBACZ,wBAAIA,UAAU,mBACX,0BAAMA,UAAU,sBAAhB,gBAVa,WACtB,IAAMI,EAAQ5B,YAAYI,GAC1B,MAAM,IAAN,OAAWwB,EAAX,WASUC,IAEJ,kBAAC,IAAD,CAAMC,GAAIC,IAAMC,KAAMR,UAAU,sBAC7B,4BAAQS,QAlBE,WACnBjB,KAiByCQ,UAAU,oBAAoBnB,KAAK,UAChE,0BAAMmB,UAAU,YAAhB,kBCjBHU,uBANS,SAACC,GAAD,OAAWA,EAAMC,QAEd,SAAC1B,GAAD,MAAe,CACvCM,YAAa,kBAAMN,EAASM,mBAGhBkB,CAA6CX","file":"static/js/gameover.3eca0cb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/like.37d0a94c.svg\";","export const formatMoney = (num) => {\n   const formatedResult = num.toLocaleString('en-US');\n   return formatedResult;\n};\n\nexport const emptyFn = () => {};\n","import {\n   GET_NEXT_QUESTION_DATA,\n   SAVE_SCORE,\n   SAVE_QUESTION_NUMBER,\n   RESTART_GAME,\n   DISABLE_BUTTONS,\n} from '../../../redux_setup/types';\nimport questions from '../../../db/questions.json';\n\nexport function saveQuestionNumber(number) {\n   return {\n      type: SAVE_QUESTION_NUMBER,\n      payload: number,\n   };\n}\n\nexport function saveScore(score) {\n   return {\n      type: SAVE_SCORE,\n      payload: +score,\n   };\n}\n\nexport function getNextQuestionData(number) {\n   return {\n      type: GET_NEXT_QUESTION_DATA,\n      payload: questions[number],\n   };\n}\n\nexport function nextQuestionHandler(number, score) {\n   return (dispatch) => {\n      const nextQuestionNumber = number + 1;\n\n      dispatch(saveQuestionNumber(nextQuestionNumber));\n      dispatch(saveScore(score));\n      dispatch(getNextQuestionData(number));\n   };\n}\n\nexport function restartGame() {\n   return {\n      type: RESTART_GAME,\n   };\n}\n\nexport function disableButtons(bool) {\n   return {\n      type: DISABLE_BUTTONS,\n      payload: bool,\n   };\n}\n","import PropTypes from 'prop-types';\n\nexport default {\n   score: PropTypes.number.isRequired,\n};\n","// libraries\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// services\nimport route from '../../../routes/routes';\nimport { formatMoney } from '../../../shared/utils';\nimport GameOverPropTypes from '../types/GameOver.types';\n\n// images\nimport likeSvgPath from '../../../static/svgs/like.svg';\n\nconst GameOver = ({ score, restartGame }) => {\n   const buttonHandler = () => {\n      restartGame();\n   };\n\n   const renderErnedMoney = () => {\n      const total = formatMoney(score);\n      return `$${total} earned`;\n   };\n\n   return (\n      <div className=\"gameover\">\n         <img className=\"gameover__img\" src={likeSvgPath} alt=\"\" />\n         <div className=\"gameover__block\">\n            <h1 className=\"gameover__title\">\n               <span className=\"gameover__subtitle\">Total score:</span>\n               {renderErnedMoney()}\n            </h1>\n            <Link to={route.Game} className=\"gameover__btn_link\">\n               <button onClick={buttonHandler} className=\"btn gameover__btn\" type=\"button\">\n                  <span className=\"btn-text\">Try again</span>\n               </button>\n            </Link>\n         </div>\n      </div>\n   );\n};\n\nexport default GameOver;\n\nGameOver.propTypes = GameOverPropTypes;\n","// libraries\nimport { connect } from 'react-redux';\n\n// actions\nimport { restartGame } from '../../game/redux/Game.actions';\n\n// module\nimport GameOver from '../screens/GameOver';\n\nconst mapStateToProps = (state) => state.game;\n\nconst mapDispatchToProps = (dispatch) => ({\n   restartGame: () => dispatch(restartGame()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameOver);\n"],"sourceRoot":""}